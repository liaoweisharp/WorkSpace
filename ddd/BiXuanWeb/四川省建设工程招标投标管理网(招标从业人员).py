# coding=UTF-8
import sys
import traceback

import requests
import time
sys.path.append("..")
import Comm.Funs
from selenium import webdriver
from bs4 import BeautifulSoup
import re
import json
import urllib
import random

sys.path.append("..")
import DataBase.DatabaseDAL
import global_Vars

def main():

    try:
        ##需要改数据库名

        dbDAL = DataBase.DatabaseDAL.DatabaseDAL(database=global_Vars.global_DataBase)

        list = dbDAL.query("SELECT bxc_Code,bxc_ComanyName,bxc_PreCompanyName FROM Tab_BX_Company  a WHERE NOT EXISTS(SELECT * FROM dbo.Tab_BX_LiuShui_ZhaoBiaoWEB5 b WHERE a.bxc_ComanyName=b.company_Name)")

        url = 'http://xmgk.scjst.gov.cn/QueryInfo/WebSit/WebPersonList.aspx?str=8DEC35BBA7A647D2E6CC2E85556E20263792440A3CB07CCC'

        pageNum=0;
        data={}
        data["__VIEWSTATE"]=""
        data["__EVENTTARGET"]="gvBiddingResultPager"
        data["__EVENTVALIDATION"]="tIo1keZqkgYa2ShGIt5ju8nreMQF6wrWcphQ/x1679VIX7g6gzeXlfBG+s5SMa551ZqdEcAQh/arh5CEIVaBlXKH+X/AmEqMjB4f3yn1TvNe6r1L2bbstRICwzXSLwYhkUlzDbBylJu/aJtBKKq/YegDhdCde8MElNXTpmhCmRPV/J6NV1AOW1lOP1IbePkE"
        data["txt_rymc"]=""
        data["txt_zch"]=""
        row=0
        maxRow=len(list)
        while row<maxRow:
        #for (bxc_Code,bxc_ComanyName,bxc_PreCompanyName) in list:
            (bxc_Code,bxc_ComanyName,bxc_PreCompanyName)=list[row]
            try:
                ra=random.randint(5,10)
                time.sleep(ra)
                data["Button1"] = ""
                data["txt_entname"]=bxc_ComanyName
                #data["txt_entname"] = bxc_PreCompanyName
                data["__EVENTARGUMENT"]=1

                cookiesStr = "_gscu_2084958918=83414331nr0zef20; Hm_lvt_6647b45850e12bf42ce7ed42bd381746=1493960743,1495063182,1495064261,1496040069; Hm_lvt_dbbf22b04de47f1e3ea92efe186df1f3=1493960743,1495063182,1495064261,1496040069; ASP.NET_SessionId=vbbvy0dgaofmfhkcp4isxmyj"
                cookiesJson = Comm.Funs.strConvertDic(cookiesStr)
                try:

                    r = requests.post(url,data=data,cookies=cookiesJson,headers={
                        "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/53{0}.3{0}".format(ra)})
                    bsObj = BeautifulSoup(r.text, "html.parser")
                    # data["__VIEWSTATE"]=bsObj.find(name="input",id="__VIEWSTATE").attrs["value"]
                    # data["__EVENTVALIDATION"] = bsObj.find(name="input",id="__EVENTVALIDATION").attrs["value"]
                except Exception as e:
                    traceback.print_exc()
                    print "超时，等待1秒分钟,Company_Code={0}".format(bxc_Code).decode("utf8")
                    time.sleep(random.randint(20, 60))
                    try:
                        r = requests.post(url, data=data, headers={
                            "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/53{0}.3{0}".format(ra)})
                        bsObj = BeautifulSoup(r.text, "html.parser")
                    except Exception as e:
                        print e.message
                        print "再超时，Company_Code={0}".format(bxc_Code).decode("utf8")
                        continue
                table= bsObj.find(name="table", attrs={"class", "list"})
                if table is None:
                    print " *** 有验证码。company:{0}".format(bxc_ComanyName).decode("utf8")
                    time.sleep(random.randint(20, 40))
                    continue

                data["__VIEWSTATE"] = bsObj.find(name="input", id="__VIEWSTATE").attrs["value"]
                data["__EVENTVALIDATION"] = bsObj.find(name="input", id="__EVENTVALIDATION").attrs["value"]

                pages= bsObj.find(id="gvBiddingResultPager").find(name="u").get_text().split("/")[1]
                pages=int(pages)
                objList = []
                page=1
                while page<=pages:
                #for page in range(1,pages):
                    if data.has_key("Button1"):
                        data.pop("Button1")
                    ra1=random.randint(1, 6)

                    time.sleep(ra1)
                    data["__EVENTARGUMENT"] = page
                    try:
                        r = requests.post(url, data=data,cookies=cookiesJson, headers={
                            "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/53{0}.3{0}".format(ra1)})
                        bsObj = BeautifulSoup(r.text, "html.parser")
                    except Exception as e:
                        traceback.print_exc()
                        print "超时22，等待1秒分钟,Company_Code={0}".format(bxc_Code).decode("utf8")
                        time.sleep(random.randint(20, 40))
                        try:
                            r = requests.post(url, data=data,cookies=cookiesJson, headers={
                                "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36"})
                            bsObj = BeautifulSoup(r.text, "html.parser")

                        except Exception as e:
                            print e.message
                            print "再超时22，Company_Code={0}".format(bxc_Code).decode("utf8")
                            continue

                    table = bsObj.find(name="table", attrs={"class", "list"})
                    if table is None:
                        print "有验证码".decode("utf8")
                        #raise RuntimeError("有验证码")
                        time.sleep(random.randint(20, 60))
                        continue

                    trs=table.findAll(name="tr")
                    if len(trs)==1:
                        print " 第{1}页为空记录。company:{0}".format(bxc_ComanyName,page).decode("utf8")
                    record=0
                    for tr in trs:
                        record+=1
                        if record==1 :
                            continue
                        tds=tr.findAll("td")
                        if len(tds)>4:
                            obj = {}

                            objList.append(obj)
                            obj["user_Name"]=tds[1].get_text().strip()
                            obj["company_Name"] = bxc_ComanyName
                            obj["zhengShu"] = tds[3].get_text().strip()
                            print "len={0},company:{1},userNmae={3}. ziZhi:{2}".format(len(objList), bxc_ComanyName,obj["user_Name"], obj["zhengShu"]).decode("utf8")

                    page+=1

            except:
                traceback.print_exc()
                continue
            else:
                print "入库中....{0}个, row/maxrow={1}/{2}".format(len(objList),row,maxRow).decode("utf8")
                dbDAL.insert(tableName="Tab_BX_LiuShui_ZhaoBiaoWEB5", list=objList)
                row+=1
            finally:
                objList = []

    except Exception as e:
        traceback.print_exc()
    finally:
        dbDAL.dispose()



if __name__=="__main__":
    main()